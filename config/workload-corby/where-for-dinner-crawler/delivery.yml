apiVersion: apps/v1
kind: Deployment
metadata:
  name: where-for-dinner-crawler
  annotations:
    kapp.k14s.io/update-strategy: fallback-on-replace
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: where-for-dinner-crawler
    apps.tanzu.vmware.com/auto-configure-actuators: "true"
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: server
    kapp.k14s.io/app: "1682466086870371062"
    kapp.k14s.io/association: v1.a7f3ca4fd3d35ced28280dc26328e663
    app.kubernetes.io/component: run
    carto.run/workload-name: where-for-dinner-crawler
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: run
      app.kubernetes.io/part-of: where-for-dinner-crawler
      apps.tanzu.vmware.com/auto-configure-actuators: "true"
      apps.tanzu.vmware.com/has-tests: "true"
      apps.tanzu.vmware.com/workload-type: server
      carto.run/workload-name: where-for-dinner-crawler
      conventions.carto.run/framework: spring-boot
      kapp.k14s.io/app: "1682466086870371062"
      kapp.k14s.io/association: v1.a7f3ca4fd3d35ced28280dc26328e663
  template:
    metadata:
      annotations:
        boot.spring.io/version: 3.0.7
        conventions.carto.run/applied-conventions: |-
          appliveview-sample/app-live-view-appflavour-check
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/spring-boot
          spring-boot-convention/spring-boot-web
          spring-boot-convention/app-live-view-appflavour-check
        developer.conventions/target-containers: workload
        kapp.k14s.io/identity: v1;workload-corby/carto.run/Workload/where-for-dinner-crawler;carto.run/v1alpha1
        kapp.k14s.io/original: '{"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"labels":{"app.kubernetes.io/part-of":"where-for-dinner-crawler","apps.tanzu.vmware.com/auto-configure-actuators":"true","apps.tanzu.vmware.com/has-tests":"true","apps.tanzu.vmware.com/workload-type":"server","kapp.k14s.io/app":"1682466086870371062","kapp.k14s.io/association":"v1.a7f3ca4fd3d35ced28280dc26328e663"},"name":"where-for-dinner-crawler","namespace":"workload-corby"},"spec":{"build":{"env":[{"name":"BP_JVM_VERSION","value":"17"}]},"params":[{"name":"ports","value":[{"containerPort":8080,"name":"http","port":80}]}],"resources":{"limits":{"cpu":"1500m","memory":"750M"},"requests":{"cpu":"100m","memory":"500M"}},"source":{"git":{"ref":{"branch":"main"},"url":"https://github.com/cpage-pivotal/where-for-dinner"},"subPath":"where-for-dinner-crawler"}}}'
        kapp.k14s.io/original-diff-md5: c6e94dc94aed3401b5d0f26ed6c0bff3
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: where-for-dinner-crawler
        apps.tanzu.vmware.com/auto-configure-actuators: "true"
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/workload-type: server
        carto.run/workload-name: where-for-dinner-crawler
        conventions.carto.run/framework: spring-boot
        kapp.k14s.io/app: "1682466086870371062"
        kapp.k14s.io/association: v1.a7f3ca4fd3d35ced28280dc26328e663
    spec:
      containers:
      - env:
        - name: JAVA_TOOL_OPTIONS
          value: -Dserver.port="8080"
        image: gcr.io/fe-cpage/tap/supply-chain/where-for-dinner-crawler-workload-corby@sha256:9c8d3bad19425c4c0e7f666c7f30d840e205bbdf54d66a0c2aa1b489326bb1fe
        name: workload
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: 1500m
            memory: 750M
          requests:
            cpu: 100m
            memory: 500M
        securityContext:
          runAsUser: 1000
      serviceAccountName: default
---
apiVersion: v1
kind: Service
metadata:
  name: where-for-dinner-crawler
  labels:
    app.kubernetes.io/part-of: where-for-dinner-crawler
    apps.tanzu.vmware.com/auto-configure-actuators: "true"
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: server
    kapp.k14s.io/app: "1682466086870371062"
    kapp.k14s.io/association: v1.a7f3ca4fd3d35ced28280dc26328e663
    app.kubernetes.io/component: run
    carto.run/workload-name: where-for-dinner-crawler
spec:
  selector:
    app.kubernetes.io/component: run
    app.kubernetes.io/part-of: where-for-dinner-crawler
    apps.tanzu.vmware.com/auto-configure-actuators: "true"
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: server
    carto.run/workload-name: where-for-dinner-crawler
    conventions.carto.run/framework: spring-boot
    kapp.k14s.io/app: "1682466086870371062"
    kapp.k14s.io/association: v1.a7f3ca4fd3d35ced28280dc26328e663
  ports:
  - targetPort: 8080
    port: 8080
    name: "8080"
  - targetPort: 8080
    port: 80
    name: http

