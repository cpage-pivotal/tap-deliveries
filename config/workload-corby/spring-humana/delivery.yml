apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: spring-humana
  annotations:
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: spring-sensors
    apps.tanzu.vmware.com/scanning: "true"
    apps.tanzu.vmware.com/workload-type: web
    kustomize.toolkit.fluxcd.io/name: full-cluster
    kustomize.toolkit.fluxcd.io/namespace: tanzu-continuousdelivery-resources
    app.kubernetes.io/component: run
    carto.run/workload-name: spring-humana
spec:
  template:
    metadata:
      annotations:
        apps.tanzu.vmware.com/correlationid: https://github.com/cpage-pivotal/spring-sensors?sub_path=/
        autoscaling.knative.dev/minScale: "1"
        boot.spring.io/version: 3.1.4
        conventions.carto.run/applied-conventions: |-
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/is-native-app-check
          spring-boot-convention/is-prometheus-enabled-check
          spring-boot-convention/spring-boot
          spring-boot-convention/spring-boot-graceful-shutdown
          spring-boot-convention/spring-boot-web
          spring-boot-convention/spring-boot-actuator
          spring-boot-convention/spring-boot-actuator-probes
          spring-boot-convention/app-live-view-appflavour-check
          spring-boot-convention/app-live-view-connector-boot
          spring-boot-convention/app-live-view-appflavours-boot
        developer.conventions/target-containers: workload
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: spring-sensors
        apps.tanzu.vmware.com/auto-configure-actuators: "false"
        apps.tanzu.vmware.com/scanning: "true"
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: spring-humana
        conventions.carto.run/framework: spring-boot
        kustomize.toolkit.fluxcd.io/name: full-cluster
        kustomize.toolkit.fluxcd.io/namespace: tanzu-continuousdelivery-resources
        tanzu.app.live.view: "true"
        tanzu.app.live.view.application.actuator.path: actuator
        tanzu.app.live.view.application.actuator.port: "8080"
        tanzu.app.live.view.application.flavours: spring-boot
        tanzu.app.live.view.application.name: spring-humana
    spec:
      containers:
      - env:
        - name: JAVA_TOOL_OPTIONS
          value: -Dmanagement.endpoint.health.probes.add-additional-paths="true" -Dmanagement.health.probes.enabled="true" -Dserver.port="8080" -Dserver.shutdown.grace-period="24s"
        image: gcr.io/fe-cpage/tap/workloads/spring-humana-workload-corby@sha256:f142cb17ee30c15ae1590f4562fd40d947d8a3334129a162c8bd888db4f3cac8
        livenessProbe:
          httpGet:
            path: /livez
            port: 8080
            scheme: HTTP
        name: workload
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
      serviceAccountName: default

